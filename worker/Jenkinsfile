pipeline { 
    agent{ 
       docker{ 
         image 'raju2128/maven_docker_3.9.8_workerapp:latest' 
         args '-v $HOME/.m2:/root/.m2' 
       } 
    } 
    stages{ 
        stage('build'){ 
            steps{ 
                echo 'building worker app' 
                dir('worker'){ 
                  sh 'mvn compile' 
                } 
            } 
        } 
        stage('test'){ 
            steps{ 
                echo 'running unit tests on worker app' 
                dir('worker'){ 
                  sh 'mvn clean test' 
                } 
            } 
        } 
        stage('package'){ 
            steps{ 
                echo 'packaging worker app into a jarfile'
                dir('worker'){ 
                  sh 'mvn package -DskipTests' 
                  archiveArtifacts artifacts: '**/target/*.jar', fingerprint:  true 
                } 
            } 
        }
        stage('Docker-Build_&_Push') {            
            environment {
                DOCKER_IMAGE = "raju2128/workerapp:v${BUILD_NUMBER}"
            }            
            steps{
                echo "build and push the docker worker image"
                script{
                    sh 'cd worker && docker build -t ${DOCKER_IMAGE} .'
                    def workerImage = docker.image("${DOCKER_IMAGE}")                    
                    docker.withRegistry('https://index.docker.io/v1/', "dockerlogin") {
                    // following commands will be executed within logged docker registry
                    workerImage.push
                    workerImage.push("latest")
                    }
                }
            }
        }
    }
    post{ 
        always{ 
            echo 'the job is complete' 

    }
  }
}






// pipeline {
//     agent{
//         docker{
//             image 'maven:3.9.8-sapmachine-21'
//             args '-v $HOME/.m2:/root/.m2'
//         }
//     }
    
//     tools{
//         maven 'maven 3.9.8'
//     }
//     stages{
//         stage("build"){
//             when{
//                 changeset "**/worker/**"
//             }

//             steps{
//                 echo 'Compiling worker app'
//                 dir('worker') {
//                     sh 'mvn compile'
//                 }
//             }
//         }
//         stage("test"){
//             when{
//                 changeset "**/worker/**"
//             }

//             steps{
//                 echo 'Running Unit Tests on Worker App' 
//                 dir('worker') {
//                     sh 'mvn clean test'
//                 }               
//             }
//         }
//         stage("package"){
//             when{
//                 // branch 'master'
//                 changeset "**/worker/**"
//             }
//             steps{
//                 echo "Packaging worker app"
//                 dir('worker') {
//                     sh 'mvn package -DskipTests'
//                     archiveArtifacts artifacts: '**/*.jar', fingerprint: true
//                 }
//             }
//         }
//     }
//     post{
//         always{
//             echo "BuildingMultibranchpiPelineforWorkerisCompleted......."
//         }
//         failure{
//             slackSend (channel: 'instavote-cd', message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
//         }
//         success{
//             slackSend (channel: 'instavote-cd', message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
//         }
//     }    
// }

